/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.nart.project;

import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.eclipse.jgit.api.Git;
import org.nart.project.git.GitOps;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.nart.project.git.FileOps;
import org.nart.project.template.ConfigGenerator;
import org.nart.project.template.DatabaseGenerator;
import org.openide.util.Exceptions;

/**
 *
 * @author Çağatay
 */
public class NartsWorkPanel extends javax.swing.JPanel{
    
    /**
     * Creates new form NartsWorkPanel
     */
    private GitOps clonner;
    private static final String CONFIGURE_FILE = "config.template";
    private static final String DATABASE_FILE = "database.template";
    public boolean clonned = false;
   
    
    private String path;
   
    public String getSelectedVersion()
    {
        return (String)this.versionSelectcb.getSelectedItem();
    }
    public NartsWorkPanel() {
        
       
        initComponents();
        this.versionSelectcb.setVisible(false);
        this.versionSelectLb.setVisible(false);
        this.pleaseWait.setVisible(false);
        
    }
    
    public String getBaseURL() {
        return baseURLTextField.getText();
    }
    public void setPath(String path)
    {
        this.path = path;
    }
    
    public String getLanguage() {
        return languageTextField.getText();
    }
    
    public String getDSN() {
        return dsnTextField.getText();
    }
    
    public String getHostName() {
        return hostNameTextField.getText();
    }
    
    public String getUserName() {
        return userNameTextField.getText();
    }
    
    public String getPassword() {
        return passwordTextField.getText();
    }
    
    public String getDatabase() {
        return databaseTextField.getText();
    }
    
    public String getPConnect() {
        return (String) pConnectComboBox.getSelectedItem();
    }
    
    public String getDBDebug() {
        return (String) dbDebugComboBox.getSelectedItem();
    }
    
    public String getCacheOn() {
        return (String) cacheOnComboBox.getSelectedItem();
    }
    
    public String getGitUserName() {
        return gitUserNameTextField.getText();
    }
    
    public String getGitPassword() {
        return gitPasswordTextField.getText();
    }
    
    public String getGitURL() {
        return gitURLTextField.getText();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        baseURLTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        languageTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dsnTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hostNameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pConnectComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        dbDebugComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cacheOnComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        gitUserNameTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        gitPasswordTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        gitURLTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        databaseTextField = new javax.swing.JTextField();
        cloneButton = new javax.swing.JButton();
        versionSelectLb = new javax.swing.JLabel();
        versionSelectcb = new javax.swing.JComboBox();
        pleaseWait = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        ConfigDatabaseGenerateButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel1.text")); // NOI18N

        baseURLTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.baseURLTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel2.text")); // NOI18N

        languageTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.languageTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel3.text")); // NOI18N

        dsnTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.dsnTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel4.text")); // NOI18N

        hostNameTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.hostNameTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel5.text")); // NOI18N

        userNameTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.userNameTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel6.text")); // NOI18N

        passwordTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.passwordTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel7.text")); // NOI18N

        pConnectComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TRUE", "FALSE" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel8.text")); // NOI18N

        dbDebugComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TRUE", "FALSE" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel9.text")); // NOI18N

        cacheOnComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TRUE", "FALSE" }));
        cacheOnComboBox.setSelectedIndex(1);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel10.text")); // NOI18N

        gitUserNameTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.gitUserNameTextField.text")); // NOI18N
        gitUserNameTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                Property(evt);
            }
        });
        gitUserNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                KeyRelease(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                KeyTyped(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel11.text")); // NOI18N

        gitPasswordTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.gitPasswordTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel12.text")); // NOI18N

        gitURLTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.gitURLTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel13.text")); // NOI18N

        databaseTextField.setText(org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.databaseTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cloneButton, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.cloneButton.text")); // NOI18N
        cloneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cloneButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(versionSelectLb, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.versionSelectLb.text")); // NOI18N

        versionSelectcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HEAD" }));
        versionSelectcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                versionSelectcbActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(pleaseWait, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.pleaseWait.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel14.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel15.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.jLabel16.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(ConfigDatabaseGenerateButton, org.openide.util.NbBundle.getMessage(NartsWorkPanel.class, "NartsWorkPanel.ConfigDatabaseGenerateButton.text")); // NOI18N
        ConfigDatabaseGenerateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfigDatabaseGenerateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gitPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gitUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(gitURLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                                .addComponent(cloneButton))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(versionSelectLb)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(versionSelectcb, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(81, 81, 81)
                                        .addComponent(pleaseWait)))
                                .addGap(21, 21, 21))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9))
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dbDebugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cacheOnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(ConfigDatabaseGenerateButton))))
                                    .addComponent(jLabel14)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(baseURLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(languageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(26, 26, 26)))
                        .addContainerGap(10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel13))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordTextField)
                                    .addComponent(userNameTextField)
                                    .addComponent(hostNameTextField)
                                    .addComponent(dsnTextField)
                                    .addComponent(databaseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pConnectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(baseURLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(languageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dsnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(hostNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(databaseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pConnectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(dbDebugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cacheOnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConfigDatabaseGenerateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(gitUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gitPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gitURLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cloneButton))
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionSelectLb)
                    .addComponent(versionSelectcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pleaseWait))
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cloneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cloneButtonActionPerformed
        // TODO add your handling code here:
        if(this.gitPasswordTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please Type Your Password!");
        }
        else{        
          File f = new File(path + "/.git");  
          if(!f.exists())
          {
              this.pleaseWait.setVisible(true); 
         if(JOptionPane.showConfirmDialog(new JFrame(),"This operation cannot be undone. Are you sure ?","Exitting Window",JOptionPane.YES_NO_OPTION)
             == JOptionPane.YES_OPTION)
            {
              
        this.cloneButton.setEnabled(false);
        this.versionSelectLb.setVisible(true);
        this.versionSelectcb.setVisible(true); 
            try {
                clonner = new GitOps(this.getGitUserName(),this.getGitPassword(),this.getGitURL(),path);
                clonner.cloneFilesToFolder();
                clonned = true;
                List<String> tlist = clonner.listTags();
                for(String s : tlist)
                {
                    this.versionSelectcb.addItem(s);
                }
                clonner.getRepo().close();
                clonner = null;
               
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "The file has not been clonned: " + ex.getMessage());
           
            }
       
                this.pleaseWait.setVisible(false);
                
            }
         else
         {
             this.pleaseWait.setVisible(false);
         }
       
          }
          else
          {
              JOptionPane.showMessageDialog(null,"Already clonned!");
          }
          
        }
           
    }//GEN-LAST:event_cloneButtonActionPerformed

    private void versionSelectcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_versionSelectcbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_versionSelectcbActionPerformed

    private void ConfigDatabaseGenerateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfigDatabaseGenerateButtonActionPerformed
        // TODO add your handling code here:
    
            String baseURL = getBaseURL();
            String language = getLanguage();
            String dsn = getDSN();
            String hostName = getHostName();
            String userName = getUserName();
            String password = getPassword();
            String database = getDatabase();
            String pConnect = getPConnect();
            String dbDebug = getDBDebug();
            String cacheOn = getCacheOn();
            ConfigGenerator cfg  = new ConfigGenerator(baseURL, language, path);
            DatabaseGenerator db = new DatabaseGenerator(dsn, hostName, userName, password, database, pConnect, dbDebug, cacheOn, path);
            cfg.replace(CONFIGURE_FILE);
            db.replace(DATABASE_FILE);
    }//GEN-LAST:event_ConfigDatabaseGenerateButtonActionPerformed

    private void Property(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_Property
        // TODO add your handling code here:
        this.gitURLTextField.setText("ssh://"+this.gitUserNameTextField.getText()+"@"+"redmine.technarts.com/data/git/technarts/labs/repo"); 
        
    }//GEN-LAST:event_Property

    private void KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KeyPressed
        // TODO add your handling code here
       this.gitURLTextField.setText("ssh://"+this.gitUserNameTextField.getText()+"@"+"redmine.technarts.com/data/git/technarts/labs/repo");
    }//GEN-LAST:event_KeyPressed

    private void KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KeyTyped
        // TODO add your handling code here:
          this.gitURLTextField.setText("ssh://"+this.gitUserNameTextField.getText()+"@"+"redmine.technarts.com/data/git/technarts/labs/repo");
    }//GEN-LAST:event_KeyTyped

    private void KeyRelease(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KeyRelease
        // TODO add your handling code here:
        this.gitURLTextField.setText("ssh://"+this.gitUserNameTextField.getText()+"@"+"redmine.technarts.com/data/git/technarts/labs/repo");
    }//GEN-LAST:event_KeyRelease


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConfigDatabaseGenerateButton;
    private javax.swing.JTextField baseURLTextField;
    private javax.swing.JComboBox cacheOnComboBox;
    private javax.swing.JButton cloneButton;
    private javax.swing.JTextField databaseTextField;
    private javax.swing.JComboBox dbDebugComboBox;
    private javax.swing.JTextField dsnTextField;
    private javax.swing.JTextField gitPasswordTextField;
    private javax.swing.JTextField gitURLTextField;
    private javax.swing.JTextField gitUserNameTextField;
    private javax.swing.JTextField hostNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField languageTextField;
    private javax.swing.JComboBox pConnectComboBox;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JLabel pleaseWait;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JLabel versionSelectLb;
    public javax.swing.JComboBox versionSelectcb;
    // End of variables declaration//GEN-END:variables

}
